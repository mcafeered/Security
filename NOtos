penetration = ethical hacking

Testing
Exploit Development occurs from vulnerability pairing and mission-drivens requirement
Test and verify success
Testing provides a number of benefits:
Faster time to breakout of initial foothold
Reduced risk of detection and/or tool failure
Improved recovery times

Plan
Procure Hardware and software
Assign developer
Assign a tester to develop TTPs and break it
Document testing results
Testing environment

Open Source Intelligence
During the lesson we will review the following topics:
Appropriate Documentation Practices
Use of Collected Data
Collection Methods

DoD States:
"produced from publicly available information that is collected, exploited, and disseminated in a timely manner to an appropriate audience for addressing a specific intelligence requirement."
only use open source research for mission completion meeting a specific intelligence requirement

Documentation
Why is it important?
What should we include in documentation?
basically take opnotes to document what you did and how

Collection and Use
What do we want to collect?
How can it be used in operations?
We never reveal our sources and methods which indicates a NOFORN classification

Limitations on Collection
Are there rules that guide our operations and collection parameters?
What are important factors when collecting data about a target?

Data to Collect
Web Data
Sensitive Data
Publicly Accessible
Social Media
Domain and IP Data

Deep web = unlisted addresses ex. signing into your banck account

Hyper-Text Markup Language (HTML)
Standardized markup language for browser interpretation of webpages

Client-side interpretation (web browser)
Utilizes elements (identified by tags)
Typically redirects to another page for server-side interaction
Cascading Stylesheets (CSS) for page themeing
can use view page source to view a website's source code, but use a website scraper for bigger/confusing websites

Advanced Scanning Techniques
HOST DISCOVERY
Find hosts that are online
HOST ENUMERATION
Find ports for each host that is online
HOST INTERROGATION
Find what service is running on each open/available port

NMAP Scripting Engine
During the lesson we will review the following topics:
Benefits of Scanning with Scripts
Script Management and Utilization
Usage and Examples

nmap can be used with several different scripts to achieve certain information

Script Management
Scripts are stored in a subdirectory of the Nmap data directory by default:
/usr/share/nmap/scripts

Usage and Examples
nmap --script <filename>|<category>|<directory>
nmap --script-help "ftp-* and discovery"
nmap --script-args <args>
nmap --script-args-file <filename>
nmap --script-help <filename>|<category>|<directory>
nmap --script-trace

========================== Web Exploitation Day 1 (XSS) ====================================
Server/Client Relationship
Synchronous communications between user and services
Not all data is not returned, client only receives what is allowed

Hyper-Text Transfer Protocol (HTTP)
Request/Response
Various tools to view:
tcpdump
wireshark
Developer Console
ex.
GET / HTTP/1.1
HTTP/1.1 200 OK

HTTP Methods
A Select Few:
GET
POST
HEAD
PUT

HTTP Response Codes
10X == Informational
2XX == Success
30X == Redirection
4XX == Client Error
5XX == Server Error

HTTP Fields
User-Agent
Referer
Cookie
Date
Server
Set-Cookie

HTTP Method Notes
GET request can be utilized to pass data to the server using the URL string:
https://www.columbiacountyga.gov/Home/Components/JobPosts/Job/1/1/something.php?var=hi

Wget
Recursively download
Recover from broken transfers
SSL/TLS support
wget -r -l2 -P /tmp ftp://ftpserver/
wget --save-cookies cookies.txt --keep-session-cookies --post-data 'user=1&password=2' https://website
wget --load-cookies cookies.txt -p https://website/interesting/article.php

cURL
Not recursive
Can use pipes
Upload ability
Supports more protocols vs Wget, such as SCP & POP3
curl -o stuff.html https://web.site/stuff.html
curl 'https://web.site/submit.php' -H 'Cookie: name=123; settings=1,2,3,4,5,6,7' --data 'name=Stan' | base64 -d > item.png

JavaScript (JS)
Allows websites to interact with the client
JavaScript runs on the client’s machine
Coded as .JS files, or in-line of HTML

JS Interaction
<script>
function myFunction() {
    document.getElementById("demo").innerHTML = "Paragraph changed.";
}
</script>
<script src="https://www.w3schools.com/js/myScript1.js"></script>

Enumeration
ROBOTS.TXT
Legitimate surfing
Tools:
NSE scripts
Nikto
Burp suite (outside class)

Cross-Site Scripting (XSS) Overview
Insertion of arbitrary code into a webpage, that executes in the browser of visitors
Unsanitized GET, POST, and PUT methods allow JS to be placed on websites
Often found in forums that allow HTML

Reflected XSS
Most common form of XSS
Transient, occurs in error messages or search results
Delivered through intermediate media, such as a link in an email
Characters that are normally illegal in URLs can be Base64 encoded
Below is what you see, but the server will decode as name=abc123

Stored XSS
Resides on vulnerable site
Only requires user to visit page
<img src="http://invalid" onerror="window.open('http://10.50.XX.XX:8000/ram.png','xss','height=1,width=1');">

Useful JavaScript Components
Proof of concept (simple alert):
<script>alert('XSS');</script>
Capturing Cookies
document.cookie
Capturing Keystrokes
bind KEYDOWN and KEYUP
Capturing Sensitive Data
document.body.innerHTML

Server-Side injection
Directory Traversal/Path Traversal
Ability to read/execute outside web server’s directory
Uses ../../ (relative paths) in manipulating a server-side file path

Malicious File Upload
Site allows unsanitized file uploads
Server doesn’t validate extension or size
Allows for code execution (shell)
Once uploaded
Find your file
Call your file

Command Injection
Application on the server is vulnerable,
allowing execution of arbitrary commands
User input not validated
Common example is a SOHO router, with a web page to allow ping
Might contain the following in it’s code:
system("ping -c 1 ".$_GET["ip"]);
Run the following to chain/stack our arbitrary command
; cat /etc/passwd

when using firefox use F12 to bring up developer tools then check the inspector and network tabs
















